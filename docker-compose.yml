services:
  cron:
    image: debian:bookworm-slim
    container_name: ${APP_NAME}-cron
    restart: unless-stopped
    command:
      - /bin/bash
      - '-c'
      - |
        export CRON_USER=epg
        export CRON_DIR=/cron
        export TARGET_DIR=$${CRON_DIR}
        export ENV_FILE_PATTERN=/scripts/*.env
        export APT_PACKAGES="git dos2unix"
        adduser --disabled-password --gecos $$CRON_USER --quiet $$CRON_USER
        # run initialization
        run-script.sh timezone genenv apt nodejs lineending cron cleanlock setowner +viewlog
        # start cron
        echo "Starting cron..."
        cron -f -L 15
    environment:
      APP_TIMEZONE: ${APP_TIMEZONE}
      APP_GUIDES_DIR: ${APP_GUIDES_DIR}
      APT_MIRROR: ${APT_MIRROR}
      NODE_VERSION: ${NODE_VERSION}
    volumes:
      - ./bin/run-script.sh:/usr/local/bin/run-script.sh
      - ./build:/build
      - ./config:/config
      - ./cron:/cron
      - ./scripts:/scripts
  nginx:
    image: nginx
    container_name: ${APP_NAME}-web
    restart: unless-stopped
    command:
      - /bin/bash
      - '-c'
      - |
        # run initialization
        run-script.sh timezone
        # run entrypoint
        /docker-entrypoint.sh nginx -g "daemon off;"
    ports:
      - ${APP_HTTP_PORT}:80
    environment:
      APP_TIMEZONE: ${APP_TIMEZONE}
      APP_GUIDES_DIR: ${APP_GUIDES_DIR}
    volumes:
      - ./bin/run-script.sh:/usr/local/bin/run-script.sh
      - ./build:/build
      - ./scripts:/scripts
      - ./templates:/etc/nginx/templates
